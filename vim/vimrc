set nocompatible              " be iMproved, required
filetype off                  " required

" Automatically install vundle
" From:
" https://github.com/VundleVim/Vundle.vim/issues/769
" START - Setting up Vundle - the vim plugin bundler
let iCanHazVundle=1
let vundle_readme=expand('~/.vim/bundle/Vundle.vim/README.md')
if !filereadable(vundle_readme)
  echo "Installing Vundle.."
  echo ""
  silent !mkdir -p ~/.vim/bundle
  silent !git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
  let iCanHazVundle=0
endif

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'Valloric/YouCompleteMe'
Plugin 'flazz/vim-colorschemes'
"Plugin 'scrooloose/nerdtree'
"Plugin 'lervag/vimtex'
"Plugin 'ctrlpvim/ctrlp.vim'

" All of your Plugins must be added before the following line
if iCanHazVundle == 0
  echo "Installing Bundles, please ignore key map error messages"
  echo ""
  :PluginInstall
endif
" END - Setting up Vundle - the vim plugin bundler
call vundle#end()            " required
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" Allow vim to use any .vimrc file in the cwd. This is useful to specify
" project specific settings. Secure disables some commands for those .vimrc
" files.
"set exrc
"set secure

" Some default config file for YouCompleteMe
let g:ycm_global_ycm_extra_conf="~/.vim/.ycm_extra_conf.py"

" enable filetype detection
filetype on
filetype plugin on
filetype indent on " filetype based indentation

autocmd FileType make set noexpandtab

syntax on
set background=dark
colorscheme dracula

set tabstop=4
set shiftwidth=4

" expand tabs by tabstop spaces
set expandtab
set number
set nocindent
set nosmartindent

set splitright

set ffs=unix " Show DOS line endings as ^M

function! FormatJSON()
    silent %!python -m json.tool
endfunction

" inoremap <S-Tab> "    "
nnoremap <F1> :YcmCompleter GetType<CR>
nnoremap <F2> :YcmCompleter GetDoc<CR>
nnoremap <F6> :YcmCompleter GoTo<CR>

